# name: CI/CD Pipeline for HTML Frontend

# # Trigger the workflow on push or pull request to the main branch
# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# # Jobs to run
# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest  # Use a GitHub-hosted runner

#     steps:
#       # Step 1: Checkout the code
#       - name: Checkout code
#         uses: actions/checkout@v3

#       # Step 2: Install dependencies (if any, e.g., npm packages)
#       - name: Install dependencies
#         run: |
#           npm install  # Only if you have a package.json file

#       # Step 3: Run tests (if any, e.g., linting or unit tests)
#       - name: Run tests
#         run: |
#           npm test  # Only if you have tests

#       # Step 4: Deploy to a server (e.g., GitHub Pages)
#       - name: Deploy to GitHub Pages
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           publish_dir: ./src  # The folder containing your HTML files












name: CI/CD Pipeline with Docker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Step 4: Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: prabodha1234/your-html-frontend:latest